export enum ActionType {
    UPDATE_USER = 'UPDATE_USER',
    UPDATE_PASSWORD = 'UPDATE_USER',

    LOGIN = 'LOGIN',

    SIGNOUT_REQUEST = 'SIGNOUT_REQUEST',
    SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS',
    SIGNOUT_FAILURE = 'SIGNOUT_FAILURE',

    SIGNUP_REQUEST = 'SIGNUP_REQUEST',
    SIGNUP_SUCCESS = 'SIGNUP_SUCCESS',
    SIGNUP_FAILURE = 'SIGNUP_FAILURE',

    LOGIN_FACEBOOK_REQUEST = 'LOGIN_FACEBOOK_REQUEST',
    LOGIN_FACEBOOK_SUCCESS = 'LOGIN_FACEBOOK_SUCCESS',
    LOGIN_FACEBOOK_FAILURE = 'LOGIN_FACEBOOK_FAILURE',

    LOGIN_REQUEST = 'LOGIN_REQUEST',
    LOGIN_SUCCESS = 'LOGIN_SUCCESS',
    LOGIN_FAILURE = 'LOGIN_FAILURE',

    LOGIN_WITH_TEMPORARY_USER_REQUEST = 'LOGIN_WITH_TEMPORARY_USER_REQUEST',

    GET_USER_REQUEST = 'GET_USER_REQUEST',
    GET_USER_SUCCESS = 'GET_USER_SUCCESS',
    GET_USER_FAILURE = 'GET_USER_FAILURE',

    UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST',
    UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS',
    UPDATE_USER_FAILURE = 'UPDATE_USER_FAILURE',

    UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST',
    UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS',
    UPDATE_PASSWORD_FAILURE = 'UPDATE_PASSWORD_FAILURE',

    GET_WORLD_REQUEST = 'GET_WORLD_REQUEST',
    GET_WORLD_SUCCESS = 'GET_WORLD_SUCCESS',
    GET_WORLD_FAILURE = 'GET_WORLD_FAILURE',

    SET_WORLD_REQUEST = 'SET_WORLD',
    SET_GAME_ACTION_DISPATCHER = 'SET_GAME_ACTION_DISPATCHER',

    DATA_LOADED = 'DATA_LOADED',

    CLEAR_ERRORS = 'CLEAR_ERRORS',

    UPDATE_GAME_REQUEST = 'UPDATE_GAME_REQUEST',
    UPDATE_GAME_SUCCESS = 'UPDATE_GAME_SUCCESS',
    UPDATE_GAME_FAILURE = 'UPDATE_GAME_FAILURE',

    GRAB_TOOL = 'GRAB_TOOL',
    ACTIVATE_TOOL = 'ACTIVATE_TOOL',
    DEACTIVATE_TOOL = 'DEACTIVATE_TOOL',
    RELEASE_TOOL = 'RELEASE_TOOL',

    DEBUG_TURN_ON_ALL_LIGHTS = 'DEBUG_TURN_ON_ALL_LIGHTS',
    DEBUG_SHOW_ROOM_LABELS = 'DEBUG_SHOW_ROOM_LABELS',
    DEBUG_SHOW_BOUNDING_BOXES = 'DEBUG_SHOW_BOUNDING_BOXES',

    GAME_IS_READY = 'GAME_IS_READY',

    WIDGET_UPDATE = 'WIDGET_UPDATE'
}

export interface WatchableAction<T> {
    request(payload: T);
    watch();
}

export interface WatchableActionConstructor<T> {
    new (): WatchableAction<T>;
    prototype: any;
}
